#This rule tests if fwfpm is in the lytosm position
[fwfpm-lyotsm]
ruleType=swVal
priority=none #means don't publish, is the default and can be left out
comp=Eq #the default, can be left out
property=fwfpm.filterName #specifies device.property-name
element=lyotsm #specifies the element within property
target=On #the value to compare to

#This rule tests if fwfpm is in state READY
[fwfpm-READY]
ruleType=txtVal
property=fwfpm.fsm
element=state
target=READY

#This tests if fwfpm is in fpm in state READY (not moving)
[fwfpm-lyotsm-READY]
ruleType=ruleComp
comp=And
rule1=fwfpm-READY
rule2=fwfpm-lyotsm

#this rule tests if the presets for stagesci1 and fwfpm are both on
[fwfpm-lyotsm-stagesci1-fpm-neq]
ruleType=elCompSw
property1=fwfpm.filterName
element1=lyotsm
property2=stagesci1.presetName
element2=fpm
comp=Neq

#This rule raises a caution if fwfpm is in fpm & READY, and stagesci1 is not in fpm
[fwfpm-lyotsm-stagesci-fpm]
ruleType=ruleComp
priority=caution
message=fwfpm is in fpm but stagesci1 is not in focus position fpm
rule1=fwfpm-lyotsm-READY
rule2=fwfpm-lyotsm-stagesci1-fpm-neq
comp=And



#######################################
# on-sky mistakes 

#test if in lab mode
[labMode-off]
ruleType=swVal
property=tcsi.labMode
element=toggle
target=Off

[cal-src-pwr-on]
ruleType=txtVal
property=pdu0.source
element=state
target=On

[cal-src-on]
ruleType=ruleComp
priority=caution
message=calibration source on
rule1=labMode-off
rule2=cal-src-pwr-on


##################################
# camsci 1/2 on but not operating

#This rules tests if camsci2 is powered-on
[camsci2-power-on]
ruleType=txtVal
property=pdu1.camsci2
element=state
target=On

#This rule tests if camsci2 is not operating
[camsci2-not-operating]
ruleType=txtVal
property=camsci2.fsm
element=state
target=OPERATING

#This rule tests if camsci2 is on and not operating
[camsci2-on-not-operating]
priority=caution
message=camsci2 is on but not operating
ruleType=ruleComp
rule1=camsci2-power-on
rule2=camsci2-not-operating

#This rules tests if camsci1 is powered-on
[camsci1-power-on]
ruleType=txtVal
property=pdu1.camsci1
element=state
target=On

#This rule tests if camsci1 is not operating
[camsci1-not-operating]
ruleType=txtVal
property=camsci1.fsm
element=state
target=OPERATING

#This rule tests if camsci1 is on and not operating
[camsci1-on-not-operating]
priority=caution
message=camsci1 is on but not operating
ruleType=ruleComp
rule1=camsci1-power-on
rule2=camsci1-not-operating


###########################################
# camsci 1/2 not saving when they should be

#this rule tests if observers.obs_on is on
[observers-obs_on-on]
ruleType=swVal
property=observers.obs_on
element=toggle
target=On

#this rule tests if camsci1-sw is not writing
[camsci1-sw-writing-off]
ruleType=swVal
property=camsci1-sw.writing
element=toggle
target=Off

#Warn that camsci1 is not writing but should be
[camsci1-sw-not-writing]
ruleType=ruleComp
priority=caution
message=camsci1 is not writing
rule1=observers-obs_on-on
rule2=camsci1-sw-writing-off


#this rule tests if camsci2-sw is not writing
[camsci2-sw-writing-off]
ruleType=swVal
property=camsci2-sw.writing
element=toggle
target=Off

#This rule tests if stagescibs is not out
[stagescibs-not-out]
ruleType=swVal
comp=Neq
property=stagescibs.PresetName
element=out
target=On

#test if camsci2 is not writing and stagescibs is not out
[camsci2-sw-writing-off-stagecibs-not-out]
ruleType=ruleComp
rule1=camsci2-sw-writing-off
rule2=stagescibs-not-out

#Warn that camsci2 is not writing but should be
[camsci2-sw-not-writing]
ruleType=ruleComp
priority=caution
message=camsci2 is not writing
rule1=observers-obs_on-on
rule2=camsci2-sw-writing-off-stagecibs-not-out






